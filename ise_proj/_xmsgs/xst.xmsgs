<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="189" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/FMC_DVIDP_CONFIG.v" Line 120: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">LOAD_ADDRESS</arg>&gt;. Formal port size is <arg fmt="%d" index="2">10</arg>-bit while actual signal size is <arg fmt="%d" index="1">9</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/FMC_DVIDP_CONFIG.v" Line 128: Assignment to <arg fmt="%s" index="1">interrupt_ack</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/FMC_DVIDP_CONFIG.v" Line 131: Assignment to <arg fmt="%s" index="1">rd_strobe</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 52: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 53: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 54: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 56: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 57: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 58: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 60: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 61: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 62: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 64: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 65: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 66: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 68: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 69: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 70: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 72: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 73: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 74: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 76: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 77: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 78: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 80: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 81: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 82: <arg fmt="%s" index="1">hsv</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 84: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 85: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="92" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/videoMux.vhdl" Line 86: <arg fmt="%s" index="1">rgb</arg> should be on the sensitivity list of the process
</msg>

<msg type="warning" file="HDLCompiler" num="321" delta="new" >"/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/fmc_dvidp_dvi_out.vhd" Line 210: Comparison between arrays of unequal length always returns <arg fmt="%s" index="1">FALSE</arg>.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/fmc_dvidp_dvi_passthrough_demo_s6ivk.vhd</arg>&quot; line <arg fmt="%s" index="2">331</arg>: Output port &lt;<arg fmt="%s" index="3">red_o</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">fmc_dvidp_dvi_in_l</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/fmc_dvidp_dvi_passthrough_demo_s6ivk.vhd</arg>&quot; line <arg fmt="%s" index="2">331</arg>: Output port &lt;<arg fmt="%s" index="3">green_o</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">fmc_dvidp_dvi_in_l</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/fmc_dvidp_dvi_passthrough_demo_s6ivk.vhd</arg>&quot; line <arg fmt="%s" index="2">331</arg>: Output port &lt;<arg fmt="%s" index="3">blue_o</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">fmc_dvidp_dvi_in_l</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/fmc_dvidp_dvi_passthrough_demo_s6ivk.vhd</arg>&quot; line <arg fmt="%s" index="2">398</arg>: Output port &lt;<arg fmt="%s" index="3">debug</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">fmc_dvidp_dvi_out_l</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/FMC_DVIDP_CONFIG.v</arg>&quot; line <arg fmt="%s" index="2">126</arg>: Output port &lt;<arg fmt="%s" index="3">read_strobe</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">cpu</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">/home/eansalab/Documents/Carlitos/RGBtoHSV_FPGA_core/ise_proj/FMC_DVIDP_CONFIG.v</arg>&quot; line <arg fmt="%s" index="2">126</arg>: Output port &lt;<arg fmt="%s" index="3">interrupt_ack</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">cpu</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">ce</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">Gray</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">ce</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="2404" delta="new" > FFs/Latches &lt;<arg fmt="%s" index="1">dvi_de_t</arg>&lt;<arg fmt="%d" index="2">0</arg>:<arg fmt="%d" index="3">0</arg>&gt;&gt; (without init value) have a constant value of <arg fmt="%c" index="4">0</arg> in block &lt;<arg fmt="%s" index="5">fmc_dvidp_dvi_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2404" delta="new" > FFs/Latches &lt;<arg fmt="%s" index="1">dvi_vsync_t</arg>&lt;<arg fmt="%d" index="2">0</arg>:<arg fmt="%d" index="3">0</arg>&gt;&gt; (without init value) have a constant value of <arg fmt="%c" index="4">0</arg> in block &lt;<arg fmt="%s" index="5">fmc_dvidp_dvi_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2404" delta="new" > FFs/Latches &lt;<arg fmt="%s" index="1">dvi_hsync_t</arg>&lt;<arg fmt="%d" index="2">0</arg>:<arg fmt="%d" index="3">0</arg>&gt;&gt; (without init value) have a constant value of <arg fmt="%c" index="4">0</arg> in block &lt;<arg fmt="%s" index="5">fmc_dvidp_dvi_out</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">debug_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">fmc_dvidp_dvi_out</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_9&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_10&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_3</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_11&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_12&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_13&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_14&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_15&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_16&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_3</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_18&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_4&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_3</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_19&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_5&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_20&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_6&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_21&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">blue_r_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_7&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_22&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">debug_24</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;de_r&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">red_r_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_23&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">hsync_r</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_26&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">vsync_r</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_25&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">green_r_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;debug_8&gt; </arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">rom</arg> in unit <arg fmt="%s" index="2">PB_FMC_DVIDP_CONFIG</arg> of type <arg fmt="%s" index="3">RAMB16_S18_S18</arg> has been replaced by <arg fmt="%s" index="4">RAMB16BWER</arg>
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_r_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_r_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_r_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">red_o_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">green_o_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">blue_o_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_in_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">debug_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">fmc_dvidp_dvi_out_l</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_capture_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">int_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">ack_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_carry_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">shadow_zero_flop</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2169" delta="new" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

